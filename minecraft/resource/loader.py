# minecraftpy, a sandbox game
# Copyright (C) 2020-2023 minecraftpy team
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

from json import load, loads

from pyglet.resource import Loader


class GameAssets:
    def __init__(self):
        self.loader = Loader("minecraft/assets")
        self._lang = "en_us"
        self._translation_en_us: dict[str, str] = load(
            self.loader.file("lang/en_us.json", mode="r")
        )
        self._translation_now: dict[str, str] = {}

    @property
    def language(self) -> str:
        return self._lang

    @language.setter
    def language(self, name: str):
        self._lang = name
        if self._lang == "en_us":
            self._translation_now = self._translation_en_us
        else:
            contents = self.loader.file("lang/%s.json" % self._lang, mode="rb").read()
            s = contents.decode("utf-8")
            self._translation_now = loads(s)

    def translate(self, name: str, **kwargs: dict) -> str:
        """Get the translation of `name`.

        Localized strings are generated by the following order:
        1. the language chosen by the player
        2. English
        3. `name` parameter
        """
        s = self._translation_now.get(name, self._translation_en_us.get(name, name))
        if s != name:
            try:
                return s.format(**kwargs)
            except:
                return name
        else:
            return name


__all__ = "GameAssets"
